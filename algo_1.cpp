/*
问题描述
给定一个序列，每次询问序列中第l个数到第r个数中第K大的数是哪个。

输入格式
第一行包含一个数n，表示序列长度。

第二行包含n个正整数，表示给定的序列。

第三个包含一个正整数m，表示询问个数。

接下来m行，每行三个数l,r,K，表示询问序列从左往右第l个数到第r个数中，从大往小第K大的数是哪个。序列元素从1开始标号。

输出格式
总共输出m行，每行一个数，表示询问的答案。
样例输入
5
1 2 3 4 5
2
1 5 2
2 3 2
样例输出
4
2
数据规模与约定
对于30%的数据，n,m<=100；

对于100%的数据，n,m<=1000；

保证k<=(r-l+1)，序列中的数<=106。
*/
#include<iostream>
#include<algorithm>
using namespace std;

typedef struct req{
	int start;
	int end;
	int k;
}req;

int main()
{
	int n;
	int m;
	int a[1001];
	req request[1000];
	cin >> n;
	for(int i = 1; i<=n; i++)
		cin >> a[i];
	cin >> m;
	for(int i = 0; i<m; i++)
	{
		cin >> request[i].start >> request[i].end >> request[i].k;
	}
	/*for(int i = 0; i<m; i++)
	{
		cout << request[i].start << request[i].end << request[i].k;
	}*/
	for(int i = 0; i<m; i++)//处理request 
	{	
		int b[1001];
		int j =0;
		for(int k = request[i].start; k<=request[i].end; k++)
		{
			b[j] = a[k];
			j++;
		}
		sort(b, b+j);
		/*for(int k =j-1; k>=0; k--)
		{
			cout << b[k]<< endl;
		}*/
		cout << b[j-(request[i].k)] << endl;
	}
	return 0;
}
